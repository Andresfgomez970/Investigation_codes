---------------------------------------------------------------Running program ExtractJsonTest.out
Read file:
{
"n_dim" : 2, 
"name": "params.txt",
"val_0": [0., -3.], 
"val_f": [1., 3.]
}
Expected results? 1

****************************** ./ExtractJsonTest.out *****************************************
ExtractJsonTest pass the test? 1
****************************** ./ExtractJsonTest.out *****************************************

---------------------------------------------------------------Running program GeneratePointFromInputFunctionTest.out

Please check tha graph resembles a gaussian histogram
****************************** ./GeneratePointFromInputFunctionTest.out *****************************************
./GeneratePointFromInputFunctionTest.out pass the test? 1
****************************** ./GeneratePointFromInputFunctionTest.out *****************************************

---------------------------------------------------------------Running program GeneratePointsFromParamFileTest.out
j: 1000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 2000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 3000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 4000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 5000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 6000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 7000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 8000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 9000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

j: 10000, total_config:10000 
l==run_info->n_points: 1
rmin: 3.0

---------------------------------------------------------------Running program InitConstantKernelTest.out
Manual initialization for Kernel
variables_name is NULL, so x1, ..., xn are set as default
Do we have a 2D data points? 1
Only one 2D function? 1
Are ranges correct for x1? 1 
Are ranges correct for x2? 1 
Is f_max_value by default 1? 1 
Does evaluated function is 1? 1 


Manual initialization for Kernel initalization by default when variables_names same as default
Do we have a 2D data points? 1
Only one 2D function? 1
Are ranges correct for x1? 1 
Are ranges correct for x2? 1 
Is f_max_value by default 1? 1 
Does evaluated function is 1? 1 
x0x1

Json initialization for Kernel, initalization by default when variables_names not specified
variables_name is NULL, so x1, ..., xn are set as default
Do we have a 2D data points? 1
Only one 2D function? 1
Are ranges correct for x1? 1 
Are ranges correct for x2? 1 
Is f_max_value by default 1? 1 
Does evaluated function is 1? 1 
x0x1
****************************** ./InitConstantKernelTest.out *****************************************
./InitConstantKernelTest.out pass the test? 1
****************************** ./InitConstantKernelTest.out *****************************************

****************************** notes *****************************************
Remember that the correct election of the vector(x) belonging to    the interval is left to user; this provides more flexibility
---------------------------------------------------------------Running program InitConstrainInfoTest.out
param_aux_names is NULL, so param_aux1, ..., param_auxn are set as default
param_constrain_names is NULL, so param_constrain1, ..., param_constrainn are set as default
param_aux_names is NULL, so param_aux1, ..., param_auxn are set as default
param_constrain_names is NULL, so param_constrain1, ..., param_constrainn are set as default

****************************** ./InitConstrainInfoTest.out *****************************************
./InitConstrainInfoTest.out pass the test? 1
****************************** ./InitConstrainInfoTest.out *****************************************
---------------------------------------------------------------Running program InitKernelTest.out

****************************** ./InitKernelTest.out *****************************************
./InitKernelTest.out pass the test? 1
****************************** ./InitKernelTest.out *****************************************
---------------------------------------------------------------Running program InitUniformMontecarloMappingStructuresTest.out
param_aux_names is NULL, so param_aux1, ..., param_auxn are set as default
param_constrain_names is NULL, so param_constrain1, ..., param_constrainn are set as default
variables_name is NULL, so x1, ..., xn are set as default

****************************** ./InitUniformMontecarloMappingStructuresTest.out *****************************************
./InitUniformMontecarloMappingStructuresTest.out pass the test? 1
****************************** ./InitUniformMontecarloMappingStructuresTest.out *****************************************
---------------------------------------------------------------Running program OrbitalParametersToStateVectorTest.out
Simpler example from analytical calculation: let us suppose:
1.8700000000000001065814103640150278806686401367187500000000000000000000000000000000000000000000000000
The orbital parameters are: rmin 1.000000 , f 0.000000, e 0.870000, w 30.000000, i 60.000000, W 45.000000
Obtained result
0.435595740399158 -1.233713067784990 
0.789149130992431 -0.088576613033854 
0.433012701892219 1.402500000000000 
---------------------------------------------------------------Running program Rotation3DAngleTest.out
------------------------------------------------------------------------
Rotation about x
	----------------------------------------------------------------
	Rx(30)
	1.000000 0.000000 0.000000 
	0.000000 0.866025 -0.500000 
	0.000000 0.500000 0.866025 
		Rx(ex, ex)
		1.000000 1.000000 
		0.000000 0.000000 
		0.000000 0.000000 
		Rx(ey, ey)
		0.000000 0.000000 
		0.866025 0.866025 
		0.500000 0.500000 
		Rx(ez, ez)
		0.000000 0.000000 
		-0.500000 -0.500000 
		0.866025 0.866025 
	----------------------------------------------------------------
	Rx(45)
	1.000000 0.000000 0.000000 
	0.000000 0.707107 -0.707107 
	0.000000 0.707107 0.707107 
		Rx(ex, ex)
		1.000000 1.000000 
		0.000000 0.000000 
		0.000000 0.000000 
		Rx(ey, ey)
		0.000000 0.000000 
		0.707107 0.707107 
		0.707107 0.707107 
		Rx(ez, ez)
		0.000000 0.000000 
		-0.707107 -0.707107 
		0.707107 0.707107 
	----------------------------------------------------------------
	Rx(60)
	1.000000 0.000000 0.000000 
	0.000000 0.500000 -0.866025 
	0.000000 0.866025 0.500000 
		Rx(ex, ex)
		1.000000 1.000000 
		0.000000 0.000000 
		0.000000 0.000000 
		Rx(ey, ey)
		0.000000 0.000000 
		0.500000 0.500000 
		0.866025 0.866025 
		Rx(ez, ez)
		0.000000 0.000000 
		-0.866025 -0.866025 
		0.500000 0.500000 


------------------------------------------------------------------------
Rotation about y
	----------------------------------------------------------------
	Ry(30)
	0.866025 0.000000 0.500000 
	0.000000 1.000000 0.000000 
	-0.500000 0.000000 0.866025 
		Ry(ex, ex)
		0.866025 0.866025 
		0.000000 0.000000 
		-0.500000 -0.500000 
		Ry(ey, ey)
		0.000000 0.000000 
		1.000000 1.000000 
		0.000000 0.000000 
		Ry(ez, ez)
		0.500000 0.500000 
		0.000000 0.000000 
		0.866025 0.866025 
	----------------------------------------------------------------
	Ry(45)
	0.707107 0.000000 0.707107 
	0.000000 1.000000 0.000000 
	-0.707107 0.000000 0.707107 
		Ry(ex, ex)
		0.707107 0.707107 
		0.000000 0.000000 
		-0.707107 -0.707107 
		Ry(ey, ey)
		0.000000 0.000000 
		1.000000 1.000000 
		0.000000 0.000000 
		Ry(ez, ez)
		0.707107 0.707107 
		0.000000 0.000000 
		0.707107 0.707107 
	----------------------------------------------------------------
	Ry(60)
	0.500000 0.000000 0.866025 
	0.000000 1.000000 0.000000 
	-0.866025 0.000000 0.500000 
		Ry(ex, ex)
		0.500000 0.500000 
		0.000000 0.000000 
		-0.866025 -0.866025 
		Ry(ey, ey)
		0.000000 0.000000 
		1.000000 1.000000 
		0.000000 0.000000 
		Ry(ez, ez)
		0.866025 0.866025 
		0.000000 0.000000 
		0.500000 0.500000 


------------------------------------------------------------------------
Rotation about z
	----------------------------------------------------------------
	Rz(30)
	0.866025 -0.500000 0.000000 
	0.500000 0.866025 0.000000 
	0.000000 0.000000 1.000000 
		Rz(ex, ex)
		0.866025 0.866025 
		0.500000 0.500000 
		0.000000 0.000000 
		Rz(ey, ey)
		-0.500000 -0.500000 
		0.866025 0.866025 
		0.000000 0.000000 
		Rz(ez, ez)
		0.000000 0.000000 
		0.000000 0.000000 
		1.000000 1.000000 
	----------------------------------------------------------------
	Rz(45)
	0.707107 -0.707107 0.000000 
	0.707107 0.707107 0.000000 
	0.000000 0.000000 1.000000 
		Rz(ex, ex)
		0.707107 0.707107 
		0.707107 0.707107 
		0.000000 0.000000 
		Rz(ey, ey)
		-0.707107 -0.707107 
		0.707107 0.707107 
		0.000000 0.000000 
		Rz(ez, ez)
		0.000000 0.000000 
		0.000000 0.000000 
		1.000000 1.000000 
	----------------------------------------------------------------
	Rz(60)
	0.500000 -0.866025 0.000000 
	0.866025 0.500000 0.000000 
	0.000000 0.000000 1.000000 
		Rz(ex, ex)
		0.500000 0.500000 
		0.866025 0.866025 
		0.000000 0.000000 
		Rz(ey, ey)
		-0.866025 -0.866025 
		0.500000 0.500000 
		0.000000 0.000000 
		Rz(ez, ez)
		0.000000 0.000000 
		0.000000 0.000000 
		1.000000 1.000000 


---------------------------------------------------------------Running program VectorStateToOrbitalParametersTest.out
0.000231---------------------------------------------------------------Running program WriteMapHeaderTest.out
param_aux_names is NULL, so param_aux1, ..., param_auxn are set as default
param_constrain_names is NULL, so param_constrain1, ..., param_constrainn are set as default
